{"version":3,"file":"AppDiscord.js","sourceRoot":"/","sources":["bot2/AppDiscord.ts"],"names":[],"mappings":";;;AACA,6CAA+F;AAC/F,mDAA4B;AAY5B,IAAe,UAAU,GAAzB,MAAe,UAAU;IAEb,KAAK,CAAC,OAAO,CACnB,CAAC,OAAO,CAAoB,EAC5B,MAAc;QAEd,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;QAE5B,QAAQ,CAAC,MAAM,CAAC,CAAA;IAClB,CAAC;IAGD,KAAK,CAAC,QAAQ,CAAC,OAAuB;QAClC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAA;IAC5D,CAAC;CACJ,CAAA;AAbG;IADC,YAAE,CAAC,OAAO,CAAC;;qDAGF,gBAAM;;yCAKf;AAGD;IADC,yBAAe,EAAE;;6CACM,wBAAc;;0CAErC;AAdU,UAAU;IAVxB,iBAAO,CAAC,EAAE,EAAE;QACT,MAAM,EAAE;YACJ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC;YAGtC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC;SACzC;KACJ,CAAC;GACa,UAAU,CAexB;AAED,SAAS,QAAQ,CAAC,MAAc;IAC5B,MAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,qBAAqB;QAC/B,OAAO,EAAE,OAAO;KACjB,CAAA;IAED,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;IAEvB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAClC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAChD,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAA;QACrE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,UAAU,CAAC,GAAG,EAAE;QACZ,QAAQ,CAAC,MAAM,CAAC,CAAA;IACpB,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAA;AACf,CAAC","sourcesContent":["//Use the Client that are provided by @typeit/discord\r\nimport { Discord, CommandMessage, CommandNotFound, ArgsOf, Client, On } from \"@typeit/discord\";\r\nimport * as Path from 'path'\r\n\r\n@Discord('', {\r\n    import: [\r\n        Path.join(__dirname, \"commands\", \"*.ts\"),\r\n        Path.join(__dirname, \"events\", \"*.ts\"),\r\n        \r\n        // If you compile your bot, the file extension will be .js\r\n        Path.join(__dirname, \"commands\", \"*.js\"),\r\n        Path.join(__dirname, \"events\", \"*.js\")\r\n    ]\r\n})\r\nabstract class AppDiscord {\r\n    @On(\"ready\")\r\n    private async onReady(\r\n      [message]: ArgsOf<\"message\">,\r\n      client: Client\r\n    ) {\r\n      console.log(`Bot connected`)\r\n  \r\n      timezone(client)\r\n    }\r\n    \r\n    @CommandNotFound()\r\n    async notFound(command: CommandMessage) {\r\n        command.channel.send(`Command not found, try \\`!help\\``)\r\n    }\r\n}\r\n\r\nfunction timezone(client: Client) {\r\n    const TIMEZONE_OPTIONS = {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      timeZone: 'America/Los_Angeles',\r\n      weekday: 'short'\r\n    }\r\n\r\n    const time = new Date()\r\n\r\n    client.guilds.cache.forEach(guild => {\r\n      guild.members.fetch(client.user!.id).then((bot) => {\r\n        bot.setNickname(time.toLocaleTimeString('en-US', TIMEZONE_OPTIONS))\r\n      })\r\n    })\r\n\r\n    setTimeout(() => {\r\n        timezone(client)\r\n    }, 60 * 1000)\r\n  }"]}